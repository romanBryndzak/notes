{"version":3,"sources":["components/page/Notes.module.css","components/Menu.js","components/page/CreateElement.js","components/page/FormComment.js","components/page/Create.js","components/page/CommentItem.js","components/page/NoteItem.js","components/page/Notes.js","components/page/EditElement.js","components/page/Edit.js","components/page/Settings.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Menu","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","CreateElement","note","N","wrapperNote","name","createDate","content","FormComment","createElement","React","useState","value","setValue","setName","noteId","onSubmit","event","preventDefault","trim","create","required","placeholder","onChange","target","Create","notes","createNote","wrapper","map","key","CommentItem","comment","author","datePublic","addComment","text","NoteItem","removeNote","createComment","onButValue","setOnButValue","undefined","comments","copyCommentItem","onClick","bind","wrapperComment","onButComment","Notes","EditElement","editingNote","toggleEdit","setToggleEdit","valueEdit","setValueEdit","editBox","e","Edit","copyEditElement","Settings","App","setNotes","useEffect","objectNotes","localStorage","getItem","JSON","parse","setItem","stringify","date","Date","options","hour","minute","month","day","concat","now","toLocaleString","updatedNoteComment","push","updatedNoteEdit","filter","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6acd7544.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Notes_wrapper__1By--\",\"wrapperNote\":\"Notes_wrapperNote__Wg3s-\",\"editBox\":\"Notes_editBox__3RmpP\",\"wrapperComment\":\"Notes_wrapperComment__1uxIU\",\"onButComment\":\"Notes_onButComment__YKo83\",\"addComment\":\"Notes_addComment__a-G5I\",\"create\":\"Notes_create__3f6vj\",\"name\":\"Notes_name__3sEMC\"};","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction Menu() {\r\n    return (\r\n        <nav className='navbar navbar-expand-lg navbar-light bg-light'>\r\n            <NavLink className='navbar-brand' to={'/notes'}>Navbar</NavLink>\r\n            <button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarNavAltMarkup'\r\n                    aria-controls='navbarNavAltMarkup' aria-expanded='false' aria-label='Toggle navigation'>\r\n                <span className='navbar-toggler-icon'/>\r\n            </button>\r\n            <div className='collapse navbar-collapse' id='navbarNavAltMarkup'>\r\n                <div className='navbar-nav'>\r\n                    <NavLink className='nav-link' to={'/notes'}><strong>Notes</strong>\r\n                        <span className='sr-only'>(current)</span>\r\n                    </NavLink>\r\n                    <NavLink className='nav-link' to={'/Create'}>Create</NavLink>\r\n                    <NavLink className='nav-link' to={'/Edit'}>Edit</NavLink>\r\n                    <NavLink className='nav-link' to={'/Settings'}>Settings</NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Menu","import React from 'react';\r\nimport N from './Notes.module.css';\r\n\r\nfunction CreateElement({note}) {\r\n\r\n    return (\r\n        <div className={N.wrapperNote}>\r\n            <p><strong>{note.name}</strong>\r\n                {note.createDate}\r\n            </p>\r\n            <li>\r\n                <span>\r\n                    {note.content}\r\n                </span>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateElement;","import React from 'react';\r\nimport N from './Notes.module.css'\r\n\r\n\r\nfunction FormComment({id, createElement}) {\r\n    const [value, setValue] = React.useState('');\r\n    const [name, setName] = React.useState('');\r\n    let noteId = id;\r\n\r\n    function formHandler(event,) {\r\n        event.preventDefault();\r\n        if (value.trim()) {\r\n            createElement(value, name, noteId);\r\n            setValue('');\r\n            setName('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={formHandler} className={N.create}>\r\n            <input type='text' required placeholder='name' onChange={\r\n                event => setName(event.target.value)}\r\n                   value={name} className={N.name}\r\n            />\r\n            <input type='text' placeholder='content' onChange={\r\n                event => setValue(event.target.value)}\r\n                   value={value}\r\n            />\r\n            <button>Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FormComment","import React from 'react';\r\nimport N from './Notes.module.css';\r\nimport CreateElement from './CreateElement';\r\nimport FormComment from './FormComment';\r\n\r\n\r\nfunction Create({notes, createNote}) {\r\n\r\n    return <div>\r\n        <h3>Create</h3>\r\n        <FormComment createElement={createNote}/>\r\n        <ul className={N.wrapper}>\r\n            {notes.map(note => {\r\n                return <CreateElement note={note} key={note.id}/>\r\n            })\r\n            }\r\n        </ul>\r\n    </div>\r\n}\r\n\r\nexport default Create","import React from 'react';\r\nimport N from './Notes.module.css'\r\n\r\nconst CommentItem = ({comment}) => {\r\n\r\n    return (\r\n\r\n        <div className={N.wrapperNote}>\r\n            <p>\r\n                <strong>{comment.author}</strong>{comment.datePublic}\r\n            </p>\r\n\r\n                <li className={N.addComment}>\r\n                    <span>{comment.text}</span>\r\n                </li>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CommentItem","import React, {useState} from 'react';\r\nimport N from './Notes.module.css'\r\nimport CommentItem from './CommentItem';\r\nimport FormComment from './FormComment';\r\n\r\nconst NoteItem = ({note, removeNote, createComment}) => {\r\n    const [onButValue, setOnButValue] = useState(true);\r\n\r\n    if (note.comments === undefined || null) {\r\n        note.comments = []\r\n    }\r\n    const copyCommentItem = note.comments.map(comment =>\r\n        <CommentItem comment={comment} key={comment.id}/>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <div className={N.wrapperNote}>\r\n                <p>\r\n                    <strong>{note.name}</strong>{note.createDate}\r\n                    <button onClick={removeNote.bind(null, note.id)}>remove</button>\r\n                </p>\r\n                <li>\r\n                    <span>{note.content}</span>\r\n                </li>\r\n            </div>\r\n            <p><strong>comments</strong></p>\r\n            <div className={N.wrapperComment}>\r\n                {copyCommentItem}\r\n            </div>\r\n            <div className={N.onButComment}>\r\n                {onButValue\r\n                    ? <button onClick={() => setOnButValue(false)}>comment</button>\r\n                    : <FormComment id={note.id} createElement={createComment}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NoteItem","import React from 'react';\r\nimport NoteItem from './NoteItem';\r\nimport N from './Notes.module.css';\r\n\r\nfunction Notes({notes, removeNote, createComment}) {\r\n\r\n    return (\r\n        <ul className={N.wrapper}>\r\n            {notes.map(note => {\r\n                return <NoteItem\r\n                    createComment={createComment}\r\n                    removeNote={removeNote}\r\n                    note={note} key={note.id}\r\n                />\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Notes","import React, {useState} from 'react';\r\nimport N from './Notes.module.css';\r\n\r\nfunction EditElement({note, editingNote}) {\r\n    const [toggleEdit, setToggleEdit] = useState(true);\r\n    const [valueEdit, setValueEdit] = useState(note.content);\r\n\r\n    function editNote(id) {\r\n        setToggleEdit(true);\r\n        editingNote(valueEdit, id);\r\n    }\r\n\r\n    return (\r\n        <div className={N.wrapperNote}>\r\n            <p><strong>{note.name}</strong>\r\n                {note.createDate}\r\n                <button onClick={() => setToggleEdit(false)}>editing</button>\r\n            </p>\r\n            {toggleEdit\r\n                ? <li><span>{note.content}</span></li>\r\n                : <li className={N.editBox}>\r\n                    <input value={valueEdit}\r\n                           onChange={e => setValueEdit(e.target.value)}/>\r\n                    <button onClick={() => editNote(note.id)}>edit</button>\r\n                </li>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default EditElement","import React from 'react';\r\nimport N from './Notes.module.css';\r\nimport EditElement from './EditElement';\r\n\r\n\r\nfunction Edit({notes, editingNote}) {\r\n\r\n    const copyEditElement = notes.map(note =>\r\n        <EditElement note={note} key={note.id} editingNote={editingNote}/>);\r\n\r\n    return <div>\r\n        <h3>Edit</h3>\r\n        <ul className={N.wrapper}>\r\n            {copyEditElement}\r\n        </ul>\r\n    </div>\r\n}\r\n\r\nexport default Edit","import React from 'react';\r\n\r\nfunction Settings() {\r\n    return <div>\r\n        <h3>Settings</h3>\r\n    </div>\r\n}\r\n\r\nexport default Settings","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Menu from './components/Menu';\nimport Create from './components/page/Create';\nimport {Route} from 'react-router-dom';\nimport Notes from './components/page/Notes';\nimport Edit from './components/page/Edit';\nimport Settings from './components/page/Settings';\n\nfunction App() {\n\n    // let object = [{\n    //     id: 0, name: 'roma', content: 'React is very well library.', createDate: '17 серпня, 22:35',\n    //     comments: [\n    //         {id: 0, author: 'jon', text: 'Yes, of course.', datePublic: '17 серпня, 23:50'},\n    //     ]\n    // }];\n\n    let [notes, setNotes] = useState([]);\n\n    useEffect(() => {\n        let objectNotes = localStorage.getItem('object');\n        if (objectNotes) {\n            objectNotes = JSON.parse(objectNotes);\n            setNotes(objectNotes)\n        }\n\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('object', JSON.stringify(notes))\n    }, [notes]);\n\n    const date = new Date();\n    let options = {\n        hour: 'numeric',\n        minute: 'numeric',\n        month: 'long',\n        day: 'numeric',\n    };\n\n    function createNote(content, name) {\n        setNotes(notes.concat([{\n                id: Date.now(),\n                name,\n                content,\n                createDate: date.toLocaleString('ua', options),\n                comments: undefined\n            }])\n        );\n    }\n\n    function createComment(text, author, id) {\n        const updatedNoteComment = notes.map(note => {\n            if (note.id === id) {\n                note.comments.push({\n                    id: Date.now(),\n                    author,\n                    text: text,\n                    datePublic: date.toLocaleString('ua', options)\n                })\n            }\n            return note\n        });\n        setNotes(updatedNoteComment)\n    }\n\n    function editingNote(text, id) {\n        const updatedNoteEdit = notes.map(note => {\n            if (note.id === id) {\n                note.content = text\n            }\n            return note\n        });\n        setNotes(updatedNoteEdit)\n    }\n\n    function removeNote(id) {\n        setNotes(notes.filter(\n            note => note.id !== id\n        ))\n    }\n\n    return (\n        <div className='App'>\n            <header className='header'>\n                <h2>SPA for create notes</h2>\n                <hr/>\n                <Menu/>\n                <hr/>\n            </header>\n            <div className='page'>\n                <Route path={'/notes'} render={() =>\n                    <Notes notes={notes}\n                           removeNote={removeNote}\n                           createComment={createComment}/>}\n                />\n                <Route path={'/Create'} render={() =>\n                    <Create notes={notes} createNote={createNote}/>}\n                />\n                <Route path={'/Edit'} render={() =>\n                    <Edit notes={notes} editingNote={editingNote}/>}\n                />\n                <Route path={'/Settings'} render={() => <Settings/>}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n\n// useEffect(() => {\n//         let objectNotes = localStorage.getItem('object');\n//         if (objectNotes) {\n//             objectNotes = JSON.parse(objectNotes);\n//             setNotes(objectNotes)\n//         }\n//     },\n//     []);\n//\n// useEffect(() => {\n//     localStorage.setItem('object', JSON.stringify(notes))\n// }, [notes]);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}