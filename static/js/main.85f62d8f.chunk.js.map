{"version":3,"sources":["components/page/Notes.module.css","components/Menu.js","components/page/CreateNoteElement.js","components/page/FormNotes.js","components/page/CreateNotes.js","components/page/NoteComment.js","components/page/NoteElement.js","components/page/Notes.js","components/page/EditNotesElement.js","components/page/EditNotes.js","components/page/Settings.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Menu","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","CreateNoteElement","note","N","wrapperCreateNote","name","createDate","content","FormNotes","createElement","pattern","title","React","useState","value","setValue","setName","noteId","onSubmit","event","preventDefault","trim","required","placeholder","onChange","target","CreateNotes","notes","createNote","ulWrapper","map","key","NoteComment","comment","wrapperComment","author","datePublic","addComment","text","NoteElement","removeNote","createComment","onButValue","setOnButValue","comments","copyCommentItem","wrapperNote","onClick","bind","wrapperNoteComment","onButComment","Notes","EditNotesElement","editingNote","toggleEdit","setToggleEdit","valueEdit","setValueEdit","wrapperEditNote","editBox","e","EditNotes","copyEditElement","Settings","dataPlaceSetting","setDataPlaceSetting","containerSetting","App","setNotes","useEffect","setting","localStorage","getItem","setItem","firebase","ref","child","on","snap","JSON","parse","val","objectNotes","set","stringify","catch","error","alert","date","Date","options","hour","minute","month","day","concat","now","toLocaleString","undefined","updatedNoteComment","push","updatedNoteEdit","filter","path","render","Boolean","window","location","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.85f62d8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ulWrapper\":\"Notes_ulWrapper__30kLs\",\"wrapperNote\":\"Notes_wrapperNote__Wg3s-\",\"wrapperNoteComment\":\"Notes_wrapperNoteComment__3SKMK\",\"wrapperCreateNote\":\"Notes_wrapperCreateNote__2c_lM\",\"wrapperEditNote\":\"Notes_wrapperEditNote__2oZVi\",\"editBox\":\"Notes_editBox__3RmpP\",\"wrapperComment\":\"Notes_wrapperComment__1uxIU\",\"addComment\":\"Notes_addComment__a-G5I\",\"onButComment\":\"Notes_onButComment__YKo83\",\"FormNotes\":\"Notes_FormNotes__10oqC\",\"name\":\"Notes_name__3sEMC\",\"containerSetting\":\"Notes_containerSetting__3Mx1n\"};","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction Menu() {\r\n    return (\r\n        <nav className='navbar navbar-expand-lg navbar-light bg-light'>\r\n            <NavLink className='navbar-brand' to={'/notes'}>Navbar</NavLink>\r\n            <button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarNavAltMarkup'\r\n                    aria-controls='navbarNavAltMarkup' aria-expanded='false' aria-label='Toggle navigation'>\r\n                <span className='navbar-toggler-icon'/>\r\n            </button>\r\n            <div className='collapse navbar-collapse' id='navbarNavAltMarkup'>\r\n                <div className='navbar-nav'>\r\n                    <NavLink className='nav-link' to={'/notes'}><strong>Notes</strong>\r\n                        <span className='sr-only'>(current)</span>\r\n                    </NavLink>\r\n                    <NavLink className='nav-link' to={'/Create'}>Create</NavLink>\r\n                    <NavLink className='nav-link' to={'/Edit'}>Edit</NavLink>\r\n                    <NavLink className='nav-link' to={'/Settings'}>Settings</NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Menu","import React from 'react';\r\nimport N from './Notes.module.css';\r\n\r\nfunction CreateNoteElement({note}) {\r\n\r\n    return (\r\n        <div className={N.wrapperCreateNote}>\r\n            <p><strong>{note.name}</strong>\r\n                {note.createDate}\r\n            </p>\r\n            <li>\r\n                <span>\r\n                    {note.content}\r\n                </span>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateNoteElement;","import React from 'react';\r\nimport N from './Notes.module.css'\r\n\r\nfunction FormNotes({id, createElement, pattern, title}) {\r\n\r\n    const [value, setValue] = React.useState('');\r\n    const [name, setName] = React.useState('');\r\n    let noteId = id;\r\n\r\n    function formHandler(event,) {\r\n        event.preventDefault();\r\n        if (value.trim()) {\r\n            createElement(value, name, noteId);\r\n            setValue('');\r\n            setName('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={formHandler} className={N.FormNotes}>\r\n            <input type='text' required placeholder='name'\r\n                   pattern={pattern} title={title}\r\n                   onChange={event => setName(event.target.value)}\r\n                   value={name} className={N.name}\r\n            />\r\n            <input type='text' placeholder='content'\r\n                   onChange={event => setValue(event.target.value)}\r\n                   value={value}\r\n            />\r\n            <button>Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FormNotes","import React from 'react';\r\nimport N from './Notes.module.css';\r\nimport CreateNoteElement from './CreateNoteElement.js';\r\nimport FormNotes from './FormNotes.js';\r\n\r\n\r\nfunction CreateNotes({notes, createNote}) {\r\n\r\n    return (\r\n        <div>\r\n            <h3>Create</h3>\r\n            <FormNotes createElement={createNote}/>\r\n            <ul className={N.ulWrapper}>\r\n                {notes && notes.map(note => {\r\n                    return <CreateNoteElement note={note} key={note.id}/>\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateNotes","import React from 'react';\r\nimport N from './Notes.module.css'\r\n\r\nconst NoteComment = ({comment}) => {\r\n\r\n    return (\r\n        <div className={N.wrapperComment}>\r\n            <p>\r\n                <strong>{comment.author}</strong>{comment.datePublic}\r\n            </p>\r\n            <li className={N.addComment}>\r\n                <span>{comment.text}</span>\r\n            </li>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NoteComment","import React, {useState} from 'react';\r\nimport N from './Notes.module.css'\r\nimport NoteComment from './NoteComment.js';\r\nimport FormNotes from './FormNotes.js';\r\n\r\nconst NoteElement = ({note, removeNote, createComment}) => {\r\n\r\n    const [onButValue, setOnButValue] = useState(true);\r\n\r\n    if (!note.comments) {\r\n        note.comments = []\r\n    }\r\n    const copyCommentItem = note.comments.map(comment =>\r\n        <NoteComment comment={comment} key={comment.id}/>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <div className={N.wrapperNote}>\r\n                <p>\r\n                    <strong>{note.name}</strong>{note.createDate}\r\n                    <button onClick={removeNote.bind(null, note.id)}>remove</button>\r\n                </p>\r\n                <li>\r\n                    <span>{note.content}</span>\r\n                </li>\r\n            </div>\r\n            <p><strong>comments</strong></p>\r\n            <div className={N.wrapperNoteComment}>\r\n                {copyCommentItem}\r\n            </div>\r\n            <div className={N.onButComment}>\r\n                {onButValue\r\n                    ? <button onClick={() => setOnButValue(false)}>comment</button>\r\n                    : <FormNotes\r\n                        id={note.id} createElement={createComment}\r\n                        pattern='[A-Z][A-Za-z]{1,} [A-Z][A-Za-z]{1,}'\r\n                        title='Please, enter two worlds with capital letter.'\r\n                    />\r\n                }\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NoteElement","import React from 'react';\r\nimport NoteElement from './NoteElement.js';\r\nimport N from './Notes.module.css';\r\n\r\nfunction Notes({notes, removeNote, createComment}) {\r\n\r\n    return (\r\n        <ul className={N.ulWrapper}>\r\n            {notes && notes.map(note => {\r\n                return <NoteElement\r\n                    createComment={createComment}\r\n                    removeNote={removeNote}\r\n                    note={note} key={note.id}\r\n                />\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Notes","import React, {useState} from 'react';\r\nimport N from './Notes.module.css';\r\n\r\nfunction EditNotesElement({note, editingNote}) {\r\n\r\n    const [toggleEdit, setToggleEdit] = useState(true);\r\n    const [valueEdit, setValueEdit] = useState(note.content);\r\n\r\n    function editNote(id) {\r\n        setToggleEdit(true);\r\n        editingNote(valueEdit, id);\r\n    }\r\n\r\n    return (\r\n        <div className={N.wrapperEditNote}>\r\n            <p><strong>{note.name}</strong>\r\n                {note.createDate}\r\n                <button onClick={() => setToggleEdit(false)}>editing</button>\r\n            </p>\r\n            {toggleEdit\r\n                ? <li><span>{note.content}</span></li>\r\n                : <li className={N.editBox}>\r\n                    <input value={valueEdit}\r\n                           onChange={e => setValueEdit(e.target.value)}/>\r\n                    <button onClick={() => editNote(note.id)}>edit</button>\r\n                </li>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default EditNotesElement","import React from 'react';\r\nimport N from './Notes.module.css';\r\nimport EditNotesElement from './EditNotesElement.js';\r\n\r\n\r\nfunction EditNotes({notes, editingNote}) {\r\n\r\n    const copyEditElement = notes && notes.map(note =>\r\n        <EditNotesElement note={note} key={note.id} editingNote={editingNote}/>);\r\n\r\n    return (\r\n        <div>\r\n            <h3>Edit</h3>\r\n            <ul className={N.ulWrapper}>\r\n                {copyEditElement}\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default EditNotes","import React from 'react';\r\nimport N from './Notes.module.css'\r\n\r\nfunction Settings({dataPlaceSetting, setDataPlaceSetting}) {\r\n    return (\r\n        <div className={N.containerSetting}>\r\n            <h3>Settings</h3>\r\n            <p>Your data was saved in <strong>{dataPlaceSetting}</strong>.</p>\r\n            <button onClick={() => setDataPlaceSetting('localStorage')}>\r\n                localStorage\r\n            </button>\r\n            <button onClick={() => setDataPlaceSetting('firebase')}>\r\n                firebase\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Menu from './components/Menu';\nimport CreateNotes from './components/page/CreateNotes';\nimport {Route} from 'react-router-dom';\nimport Notes from './components/page/Notes';\nimport EditNotes from './components/page/EditNotes';\nimport Settings from './components/page/Settings';\nimport *as firebase from \"firebase\";\n\nfunction App() {\n\n    // let object = [{\n    //     id: 0, name: 'roma', content: 'React is very well library.', createDate: '17 серпня, 22:35',\n    //     comments: [\n    //         {id: 0, author: 'jon', text: 'Yes, of course.', datePublic: '17 серпня, 23:50'},\n    //     ]\n    // }];\n\n    const [notes, setNotes] = useState(null);\n    const [dataPlaceSetting, setDataPlaceSetting] = useState('');\n\n\n    useEffect(() => {\n        debugger\n        const setting = localStorage.getItem('dataPlaceSetting');\n        if (setting) {\n            setDataPlaceSetting(setting)\n        } else {\n            localStorage.setItem('dataPlaceSetting', dataPlaceSetting);\n            setDataPlaceSetting('localStorage')\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('dataPlaceSetting', dataPlaceSetting);\n        if (dataPlaceSetting === 'firebase') {\n            firebase.database().ref('notes').child('object')\n                .on('value', snap => {\n                    setNotes(JSON.parse(snap.val()))\n                });\n        }\n        if (dataPlaceSetting === 'localStorage') {\n            let objectNotes = localStorage.getItem('object');\n            if (objectNotes) {\n                objectNotes = JSON.parse(objectNotes);\n                setNotes(objectNotes)\n            }\n        }\n    }, [dataPlaceSetting]);\n\n\n    useEffect(() => {\n        if (notes !== null) {\n            if (dataPlaceSetting === 'firebase') {\n                firebase.database().ref(`notes/object`).set(JSON.stringify(notes))\n                    .catch(error => alert(error));\n            }\n            if (dataPlaceSetting === 'localStorage') {\n                localStorage.setItem('object', JSON.stringify(notes))\n            }\n        }\n    }, [notes]);\n\n    const date = new Date();\n    const options = {\n        hour: 'numeric',\n        minute: 'numeric',\n        month: 'long',\n        day: 'numeric',\n    };\n\n    function createNote(content, name) {\n        setNotes(notes.concat([{\n                id: Date.now(),\n                name,\n                content,\n                createDate: date.toLocaleString('ua', options),\n                comments: undefined\n            }])\n        );\n    }\n\n    function createComment(text, author, id) {\n        const updatedNoteComment = notes.map(note => {\n            if (note.id === id) {\n                note.comments.push({\n                    id: Date.now(),\n                    author,\n                    text: text,\n                    datePublic: date.toLocaleString('ua', options)\n                })\n            }\n            return note\n        });\n        setNotes(updatedNoteComment)\n    }\n\n    function editingNote(text, id) {\n        const updatedNoteEdit = notes.map(note => {\n            if (note.id === id) {\n                note.content = text\n            }\n            return note\n        });\n        setNotes(updatedNoteEdit)\n    }\n\n    function removeNote(id) {\n        setNotes(notes.filter(\n            note => note.id !== id\n        ))\n    }\n\n    return (\n        <div className='App'>\n            <header className='header'>\n                <h2>SPA for create notes</h2>\n                <hr/>\n                <Menu/>\n                <hr/>\n            </header>\n            <div className='page'>\n                <Route path={'/notes'} render={() =>\n                    <Notes notes={notes}\n                           removeNote={removeNote}\n                           createComment={createComment}\n                    />\n                }/>\n                <Route path={'/Create'} render={() =>\n                    <CreateNotes notes={notes} createNote={createNote}/>\n                }/>\n                <Route path={'/Edit'} render={() =>\n                    <EditNotes notes={notes} editingNote={editingNote}/>\n                }/>\n                <Route path={'/Settings'} render={() =>\n                    <Settings dataPlaceSetting={dataPlaceSetting}\n                              setDataPlaceSetting={setDataPlaceSetting}\n                    />\n                }/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\nimport * as firebase from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAAJGX4vBIICaZ73tYtzTvMu00G40G9LAg\",\n    authDomain: \"create-notes-5516f.firebaseapp.com\",\n    databaseURL: \"https://create-notes-5516f.firebaseio.com\",\n    projectId: \"create-notes-5516f\",\n    storageBucket: \"create-notes-5516f.appspot.com\",\n    messagingSenderId: \"1012676424231\",\n    appId: \"1:1012676424231:web:03e1c536ae80d6a6855402\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}